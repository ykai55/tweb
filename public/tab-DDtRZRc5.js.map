{"version":3,"file":"tab-DDtRZRc5.js","sources":["../src/components/sidebarLeft/tabs/privacy/messages/useIsConfirmationNeededOnClose.ts","../src/components/sidebarLeft/tabs/privacy/messages/appearZoomTransition.tsx","../src/components/sidebarLeft/tabs/privacy/messages/config.ts","../src/components/sidebarLeft/tabs/privacy/messages/paidSettingsSection.tsx","../src/helpers/object/setBooleanFlag.ts","../src/components/sidebarLeft/tabs/privacy/messages/useSaveSettings.ts","../src/components/staticRadio.tsx","../src/components/sidebarLeft/tabs/privacy/messages/useIsPremium.tsx","../src/components/sidebarLeft/tabs/privacy/messages/optionsSection.tsx","../src/components/sidebarLeft/tabs/privacy/messages/useStateStore.ts","../src/components/sidebarLeft/tabs/privacy/messages/utils.ts","../src/components/sidebarLeft/tabs/privacy/messages/useSettings.ts","../src/components/sidebarLeft/tabs/privacy/messages/tab.tsx"],"sourcesContent":["import {Accessor} from 'solid-js';\n\nimport confirmationPopup, {ConfirmationPopupRejectReason} from '../../../../confirmationPopup';\nimport {PopupPeerOptions} from '../../../../popups/peer';\n\ntype UseIsConfirmationNeededOnCloseArgs = {\n  hasChanges: Accessor<boolean>;\n  saveAllSettings: () => Promise<void>;\n};\n\nconst useIsConfirmationNeededOnClose = ({hasChanges, saveAllSettings}: UseIsConfirmationNeededOnCloseArgs) => async() => {\n  if(!hasChanges()) return;\n\n  const saveButton: PopupPeerOptions['buttons'][number] = {\n    langKey: 'Save'\n  };\n\n  try {\n    await confirmationPopup({\n      titleLangKey: 'UnsavedChanges',\n      descriptionLangKey: 'UnsavedChangesDescription.Privacy',\n      button: saveButton,\n      buttons: [\n        saveButton,\n        {isCancel: true, langKey: 'Discard'}\n      ],\n      rejectWithReason: true\n    });\n    saveAllSettings();\n  } catch(_reason: any) {\n    const reason: ConfirmationPopupRejectReason = _reason;\n\n    if(reason === 'closed') throw new Error();\n  }\n};\n\nexport default useIsConfirmationNeededOnClose;\n","import {ParentComponent} from 'solid-js';\nimport {Transition} from 'solid-transition-group';\n\n\nconst animateEl = (backwards = false) => async(el: Element, done: () => void) => {\n  const keyframes = ['scale(0)', 'scale(1)'];\n  if(backwards) keyframes.reverse();\n\n  await el.animate(\n    {transform: keyframes},\n    {duration: 80}\n  ).finished;\n\n  done();\n};\n\nconst AppearZoomTransition: ParentComponent = (props) => {\n  return (\n    <Transition\n      onEnter={animateEl()}\n      onExit={animateEl(true)}\n    >\n      {props.children}\n    </Transition>\n  );\n};\n\nexport default AppearZoomTransition;\n","import {InputPrivacyKey, InputPrivacyRule} from '../../../../../layer';\n\nexport enum MessagesPrivacyOption {\n  Everybody = 1,\n  ContactsAndPremium,\n  Paid\n};\n\nexport type MessagesTabStateStore = {\n  option?: MessagesPrivacyOption;\n  stars?: number;\n  chosenPeers?: PeerId[];\n};\n\nexport const privacyRulesInputKey = 'inputPrivacyKeyNoPaidMessages' satisfies InputPrivacyKey['_'];\n\nexport const defaultPrivacyRules: InputPrivacyRule[] = [\n  // This is set by default on the server, there's an error thrown if we try to set it ourselves\n  // {\n  //   _: 'inputPrivacyValueDisallowAll'\n  // },\n  {\n    _: 'inputPrivacyValueAllowContacts'\n  }\n];\n\nexport const TRANSITION_TIME = 120;\n","import {Component, Show} from 'solid-js';\nimport {SetStoreFunction} from 'solid-js/store';\nimport {Transition} from 'solid-transition-group';\n\nimport {i18n, join} from '../../../../../lib/langPack';\n\nimport Section from '../../../../section';\nimport RowTsx from '../../../../rowTsx';\n\nimport {useSuperTab} from '../../solidJsTabs/superTabProvider';\n\nimport useStarsCommissionAndWithdrawalPrice from './useStarsCommissionAndWithdrawalPrice';\nimport {MessagesTabStateStore, TRANSITION_TIME} from './config';\nimport {ChosenPeersByType} from './useStateStore';\nimport StarRangeInput from './starsRangeInput';\n\n\nconst PaidSettingsSection: Component<{\n  store: MessagesTabStateStore;\n  setStore: SetStoreFunction<MessagesTabStateStore>;\n  chosenPeersByType: ChosenPeersByType;\n  isPaid: boolean;\n  exitAnimationPromise: Promise<any>;\n}> = (props) => {\n  const [tab, {AppAddMembersTab}] = useSuperTab();\n\n  const {commissionPercents, willReceiveDollars} = useStarsCommissionAndWithdrawalPrice(() => props.store.stars);\n\n  const onExceptionsClick = () => {\n    tab.slider.createTab(AppAddMembersTab).open({\n      type: 'privacy',\n      skippable: true,\n      title: 'PaidMessages.RemoveFee',\n      placeholder: 'PrivacyModal.Search.Placeholder',\n      takeOut: (newPeerIds) => {\n        props.setStore('chosenPeers', newPeerIds);\n      },\n      selectedPeerIds: [...props.store.chosenPeers]\n    });\n  };\n\n\n  const chosenPeersLabel = () => {\n    if(!props.store.chosenPeers.length) return i18n('PrivacySettingsController.AddUsers');\n\n    const {users, chats} = props.chosenPeersByType;\n\n    return join([\n      users.length ? i18n('Users', [users.length]) : null,\n      chats.length ? i18n('Chats', [chats.length]) : null\n    ].filter(Boolean), false);\n  };\n\n  return (\n    <Transition\n      onEnter={async(_el, done) => {\n        const el = _el as HTMLElement;\n        el.style.opacity = '0';\n        await props.exitAnimationPromise;\n        await el.animate({opacity: [0, 1]}, {duration: TRANSITION_TIME}).finished;\n        el.style.removeProperty('opacity');\n        done();\n      }}\n      onExit={async(el, done) => {\n        await el.animate({opacity: [1, 0]}, {duration: TRANSITION_TIME}).finished;\n        done();\n      }}\n    >\n      <Show when={props.isPaid}>\n        <div>\n          <Section\n            name=\"PaidMessages.SetPrice\"\n            caption=\"PaidMessages.SetPriceDescription\"\n            captionArgs={[\n              commissionPercents(),\n              willReceiveDollars()\n            ]}\n          >\n            <StarRangeInput value={props.store.stars} onChange={props.setStore.bind(null, 'stars')} />\n          </Section>\n\n          <Section name=\"PrivacyExceptions\" caption=\"PaidMessages.RemoveFeeDescription\">\n            <RowTsx\n              title={i18n('PaidMessages.RemoveFee')}\n              rightContent={<span class=\"primary\">{chosenPeersLabel()}</span>}\n              clickable={onExceptionsClick}\n            />\n          </Section>\n        </div>\n      </Show>\n    </Transition>\n  );\n};\n\nexport default PaidSettingsSection;\n","export default function setBooleanFlag<T extends any>(obj: T, key: keyof T, value: boolean) {\n  // @ts-ignore\n  if(value) obj[key] = true;\n  else delete obj[key];\n}\n","import {Accessor} from 'solid-js';\n\nimport {GlobalPrivacySettings, InputPrivacyRule} from '../../../../../layer';\nimport {useHotReloadGuard} from '../../../../../lib/solidjs/hotReloadGuard';\nimport setBooleanFlag from '../../../../../helpers/object/setBooleanFlag';\nimport {logger} from '../../../../../lib/logger';\n\nimport {useSuperTab} from '../../solidJsTabs/superTabProvider';\nimport type {AppPrivacyMessagesTab} from '../../solidJsTabs';\n\nimport {MessagesTabStateStore, MessagesPrivacyOption, defaultPrivacyRules, privacyRulesInputKey} from './config';\nimport {ChosenPeersByType} from './useStateStore';\n\n\nconst log = logger('useSaveSettings');\n\ntype AppPrivacyMessagesTabType = typeof AppPrivacyMessagesTab;\n\ntype UseSaveSettingsArgs = {\n  store: MessagesTabStateStore;\n  globalPrivacy: Accessor<GlobalPrivacySettings>;\n  isPaid: Accessor<boolean>;\n  hasChanges: Accessor<boolean>;\n  chosenPeersByType: Accessor<ChosenPeersByType>;\n};\n\nconst useSaveSettings = ({store, globalPrivacy, isPaid, hasChanges, chosenPeersByType}: UseSaveSettingsArgs) => {\n  const {rootScope} = useHotReloadGuard();\n  const [tab] = useSuperTab<AppPrivacyMessagesTabType>();\n\n  const saveGlobalSettings = () => {\n    const settings = structuredClone(globalPrivacy());\n\n    settings.noncontact_peers_paid_stars = isPaid() ? store.stars : 0;\n\n    settings.pFlags ??= {};\n    setBooleanFlag(settings.pFlags, 'new_noncontact_peers_require_premium', store.option === MessagesPrivacyOption.ContactsAndPremium);\n\n\n    log('saving settings :>> ', settings);\n\n    const promise = rootScope.managers.appPrivacyManager.setGlobalPrivacySettings(settings);\n\n    tab.payload.onSaved(promise);\n\n    return promise;\n  };\n\n  const savePrivacyRules = async() => {\n    const rules: InputPrivacyRule[] = [];\n\n    const {chats, users} = chosenPeersByType();\n\n    rules.push(...defaultPrivacyRules);\n\n    if(chats.length) rules.push({\n      _: 'inputPrivacyValueAllowChatParticipants',\n      chats\n    });\n    if(users.length) rules.push({\n      _: 'inputPrivacyValueAllowUsers',\n      users: await Promise.all(users.map((id) => rootScope.managers.appUsersManager.getUserInput(id)))\n    });\n\n\n    log('saving rules :>> ', rules);\n\n    return rootScope.managers.appPrivacyManager.setPrivacy(privacyRulesInputKey, rules);\n  };\n\n\n  let isSaving = false;\n\n  const saveAllSettings = async() => {\n    if(isSaving || !hasChanges()) return;\n    isSaving = true;\n\n    try {\n      await Promise.all([\n        saveGlobalSettings(),\n        isPaid() ? savePrivacyRules() : undefined\n      ]);\n      tab.close();\n    } finally {\n      isSaving = false; // Idk let the user retry if it somewhy fails)\n    }\n  };\n\n  return saveAllSettings;\n};\n\nexport default useSaveSettings;\n","import {Component, splitProps, JSX} from 'solid-js';\n\nimport styles from './staticRadio.module.scss';\n\nconst StaticRadio: Component<{\n  checked: boolean;\n  floating?: boolean;\n  class?: string;\n} & JSX.HTMLAttributes<HTMLSpanElement>> = (inProps) => {\n  const [props, spanProps] = splitProps(inProps, ['checked', 'floating', 'class', 'classList']);\n\n  return <span\n    class={styles.Radio}\n    classList={{\n      [props.class]: !!props.class,\n      [styles.checked]: props.checked,\n      [styles.floating]: props.floating,\n      'offset-left': props.floating,\n      ...props.classList\n    }}\n    {...spanProps}\n  />;\n};\n\nexport default StaticRadio;\n","import {createSignal, onCleanup} from 'solid-js';\n\nimport {useHotReloadGuard} from '../../../../../lib/solidjs/hotReloadGuard';\nimport ListenerSetter from '../../../../../helpers/listenerSetter';\n\n\nconst useIsPremium = () => {\n  const {rootScope} = useHotReloadGuard();\n\n  const [isPremium, setIsPremium] = createSignal(rootScope.premium);\n\n  // (window as any).setIsPremium = setIsPremium;\n\n  const listenerSetter = new ListenerSetter();\n\n  listenerSetter.add(rootScope)('premium_toggle', (newValue) => {\n    setIsPremium(newValue);\n  });\n\n  onCleanup(() => {\n    listenerSetter.removeAll();\n  });\n\n  return isPremium;\n};\n\nexport default useIsPremium;\n","import {Component} from 'solid-js';\nimport {SetStoreFunction} from 'solid-js/store';\nimport {Transition} from 'solid-transition-group';\n\nimport {useHotReloadGuard} from '../../../../../lib/solidjs/hotReloadGuard';\nimport anchorCallback from '../../../../../helpers/dom/anchorCallback';\nimport {i18n} from '../../../../../lib/langPack';\n\nimport {hideToast, toastNew} from '../../../../toast';\nimport StaticRadio from '../../../../staticRadio';\nimport Section from '../../../../section';\nimport RowTsx from '../../../../rowTsx';\n\nimport {MessagesPrivacyOption, MessagesTabStateStore, TRANSITION_TIME} from './config';\nimport useIsPremium from './useIsPremium';\n\n\nconst DEFAULT_STARS_AMOUNT = 10;\n\nconst OptionsSection: Component<{\n  store: MessagesTabStateStore;\n  setStore: SetStoreFunction<MessagesTabStateStore>;\n  isPaid: boolean;\n  onExitAnimationPromise: (promise: Promise<any>) => void;\n}> = (props) => {\n  const {PopupPremium} = useHotReloadGuard();\n\n  const isPremium = useIsPremium();\n\n\n  const handlePremiumOptionClick = (callback: () => void) => () => {\n    if(isPremium()) return callback();\n\n    toastNew({\n      langPackKey: 'PrivacySettings.Messages.PremiumError',\n      langPackArguments: [\n        anchorCallback(() => {\n          hideToast();\n          PopupPremium.show({\n            feature: 'message_privacy'\n          });\n        })\n      ]\n    });\n  };\n\n  const caption = (\n    <Transition\n      mode=\"outin\"\n      onEnter={async(el, done) => {\n        await el.animate({opacity: [0, 1]}, {duration: TRANSITION_TIME}).finished;\n        done();\n      }}\n      onExit={async(el, done) => {\n        const promise = el.animate({opacity: [1, 0]}, {duration: TRANSITION_TIME}).finished;\n        props.onExitAnimationPromise(promise);\n        await promise;\n        done();\n      }}\n    >\n      {\n        !props.isPaid ?\n          i18n('Privacy.MessagesInfo', [anchorCallback(() => void PopupPremium.show())]) :\n          i18n('PaidMessages.ChargeForMessagesDescription')\n      }\n    </Transition>\n  );\n\n  return (\n    <Section\n      name=\"PrivacyMessagesTitle\"\n      caption={caption as any}\n    >\n      <RowTsx\n        checkboxField={\n          <StaticRadio\n            floating\n            checked={props.store.option === MessagesPrivacyOption.Everybody}\n          />\n        }\n        clickable={() => {\n          props.setStore('option', MessagesPrivacyOption.Everybody);\n        }}\n        title={i18n('PrivacySettingsController.Everbody')}\n      />\n      <RowTsx\n        checkboxField={\n          isPremium() && <StaticRadio\n            floating\n            checked={props.store.option === MessagesPrivacyOption.ContactsAndPremium}\n          />\n        }\n        icon={!isPremium() ? 'premium_lock' : undefined}\n        clickable={handlePremiumOptionClick(() => {\n          props.setStore('option', MessagesPrivacyOption.ContactsAndPremium);\n        })}\n        title={i18n('Privacy.ContactsAndPremium')}\n      />\n      <RowTsx\n        checkboxField={\n          isPremium() && <StaticRadio floating checked={props.isPaid} />\n        }\n        icon={!isPremium() ? 'premium_lock' : undefined}\n        clickable={handlePremiumOptionClick(() => {\n          props.setStore(prev => ({\n            option: MessagesPrivacyOption.Paid,\n            stars: prev.stars || DEFAULT_STARS_AMOUNT\n          }));\n        })}\n        title={i18n('PaidMessages.ChargeForMessages')}\n      />\n    </Section>\n  );\n};\n\nexport default OptionsSection;\n","import {Accessor, createComputed, createSignal, createEffect, createMemo} from 'solid-js';\nimport {createStore, reconcile} from 'solid-js/store';\n\nimport throttle from '../../../../../helpers/schedulers/throttle';\nimport deepEqual from '../../../../../helpers/object/deepEqual';\nimport {GlobalPrivacySettings} from '../../../../../layer';\n\nimport {MessagesPrivacyOption, MessagesTabStateStore} from './config';\n\n\ntype UseStateStoreArgs = {\n  isReady: Accessor<boolean>;\n  globalPrivacy: Accessor<GlobalPrivacySettings>;\n  currentOption: Accessor<MessagesPrivacyOption>;\n  currentAllowedUsers: Accessor<PeerId[]>;\n  currentAllowedChats: Accessor<PeerId[]>;\n};\n\nexport type ChosenPeersByType = {\n  chats: (string | number)[];\n  users: PeerId[];\n};\n\nconst useStateStore = ({\n  isReady,\n  globalPrivacy,\n  currentOption, currentAllowedChats, currentAllowedUsers\n}: UseStateStoreArgs) => {\n  let initialState: MessagesTabStateStore = {};\n  const [store, setStore] = createStore<MessagesTabStateStore>({});\n\n  createComputed(() => {\n    if(!isReady()) return;\n\n    initialState = {\n      option: currentOption(),\n      stars: Number(globalPrivacy().noncontact_peers_paid_stars) || undefined,\n      chosenPeers: [...currentAllowedUsers(), ...currentAllowedChats()]\n    };\n\n    setStore(reconcile(structuredClone(initialState)));\n  });\n\n\n  const [hasChanges, setHasChanges] = createSignal(false);\n  const throttledSetHasChanges = throttle(setHasChanges, 200, true);\n\n  // The header is jerking if updating the hasChanges too quickly WTF\n  createEffect(() => {\n    const ignoreKeys: (keyof MessagesTabStateStore)[] = !!!isPaid() ? ['chosenPeers', 'stars'] : [];\n\n    throttledSetHasChanges(!deepEqual(store, initialState, ignoreKeys));\n  });\n\n\n  const isPaid = createMemo(() => store.option === MessagesPrivacyOption.Paid);\n\n  const chosenPeersByType = (): ChosenPeersByType => ({\n    chats: store.chosenPeers.filter(peer => peer.isAnyChat()).map(peer => peer.toChatId()),\n    users: store.chosenPeers.filter(peer => peer.isUser())\n  });\n\n\n  return [\n    store,\n    setStore,\n    {hasChanges, isPaid, chosenPeersByType}\n  ] as const;\n};\n\n\nexport default useStateStore;\n","import {InputUser} from '../../../../../layer';\n\n// Note: after saving privacy rules, the cached users are objects instead of being numbers\nexport const getUserId = (user: InputUser.inputUser | string | number) => {\n  if(user instanceof Object) return user.user_id?.toPeerId(true);\n  return user.toPeerId(true);\n};\n","import {createResource} from 'solid-js';\n\nimport {useHotReloadGuard} from '../../../../../lib/solidjs/hotReloadGuard';\n\nimport {usePromiseCollector} from '../../solidJsTabs/promiseCollector';\n\nimport {privacyRulesInputKey, MessagesPrivacyOption} from './config';\nimport useIsPremium from './useIsPremium';\nimport {getUserId} from './utils';\n\n\nconst useSettings = () => {\n  const {rootScope} = useHotReloadGuard();\n  const promiseCollector = usePromiseCollector();\n\n  const isPremium = useIsPremium();\n\n\n  const [privacyRules] = createResource(() => {\n    const promise = rootScope.managers.appPrivacyManager.getPrivacy(privacyRulesInputKey);\n    promiseCollector.collect(promise);\n    return promise;\n  });\n\n  const [globalPrivacy] = createResource(() => {\n    const promise = rootScope.managers.appPrivacyManager.getGlobalPrivacySettings();\n    promiseCollector.collect(promise);\n    return promise;\n  });\n\n\n  const isReady = () => privacyRules.state === 'ready' && globalPrivacy.state === 'ready';\n\n  const currentOption = () => {\n    if(!isPremium()) return MessagesPrivacyOption.Everybody;\n\n    if(globalPrivacy().noncontact_peers_paid_stars) return MessagesPrivacyOption.Paid;\n\n    if(globalPrivacy().pFlags.new_noncontact_peers_require_premium) return MessagesPrivacyOption.ContactsAndPremium;\n\n    return MessagesPrivacyOption.Everybody;\n  };\n\n  const currentAllowedUsers = () =>\n    privacyRules()\n    ?.filter((rule) => rule._ === 'privacyValueAllowUsers')\n    ?.map(rule => rule?.users).flat()\n    ?.map(user => user.toPeerId()) || [];\n\n  const currentAllowedChats = () =>\n    privacyRules()\n    ?.find((rule) => rule._ === 'privacyValueAllowChatParticipants')?.chats\n    ?.map(getUserId)\n    ?.filter((v) => v !== undefined) || [];\n\n\n  return {\n    isReady,\n\n    globalPrivacy,\n    privacyRules,\n\n    currentOption,\n    currentAllowedUsers,\n    currentAllowedChats\n  };\n};\n\nexport default useSettings;\n","import {createEffect, createSignal, Show} from 'solid-js';\nimport {Portal} from 'solid-js/web';\n\nimport {logger} from '../../../../../lib/logger';\nimport DEBUG from '../../../../../config/debug';\n\nimport ripple from '../../../../ripple'; ripple; // keep\nimport {IconTsx} from '../../../../iconTsx';\n\nimport {useSuperTab} from '../../solidJsTabs/superTabProvider';\n\nimport useIsConfirmationNeededOnClose from './useIsConfirmationNeededOnClose';\nimport AppearZoomTransition from './appearZoomTransition';\nimport PaidSettingsSection from './paidSettingsSection';\nimport useSaveSettings from './useSaveSettings';\nimport OptionsSection from './optionsSection';\nimport useStateStore from './useStateStore';\nimport useSettings from './useSettings';\n\n\nconst log = logger('MessagesPrivacyTab');\n\n\nconst MessagesTab = () => {\n  const [tab] = useSuperTab();\n\n  const {\n    isReady,\n    globalPrivacy, privacyRules,\n    currentOption, currentAllowedUsers, currentAllowedChats\n  } = useSettings();\n\n  const [store, setStore, {isPaid, hasChanges, chosenPeersByType}] = useStateStore({\n    isReady,\n    globalPrivacy,\n    currentOption, currentAllowedChats, currentAllowedUsers\n  });\n\n  const saveAllSettings = useSaveSettings({\n    store,\n    globalPrivacy,\n    isPaid,\n    hasChanges,\n    chosenPeersByType\n  });\n\n  tab.isConfirmationNeededOnClose = useIsConfirmationNeededOnClose({hasChanges, saveAllSettings});\n\n\n  const [exitAnimationPromise, setExitAnimationPromise] = createSignal<Promise<any>>();\n\n  if(DEBUG) createEffect(() => {\n    log('privacyRules() :>> ', privacyRules());\n    log('globalPrivacy() :>> ', globalPrivacy());\n  });\n\n\n  return (\n    <Show when={isReady()}>\n      <Portal mount={tab.header}>\n        <AppearZoomTransition>\n          <Show when={hasChanges()}>\n            <button\n              use:ripple\n              class=\"btn-icon blue\"\n              onClick={() => void saveAllSettings()}\n            >\n              <IconTsx icon=\"check\" />\n            </button>\n          </Show>\n        </AppearZoomTransition>\n      </Portal>\n\n      <OptionsSection\n        isPaid={isPaid()}\n        store={store}\n        setStore={setStore}\n        onExitAnimationPromise={setExitAnimationPromise}\n      />\n\n      <PaidSettingsSection\n        isPaid={isPaid()}\n        store={store}\n        setStore={setStore}\n        chosenPeersByType={chosenPeersByType()}\n        exitAnimationPromise={exitAnimationPromise()}\n      />\n    </Show>\n  );\n};\n\nexport default MessagesTab;\n"],"names":["useIsConfirmationNeededOnClose","hasChanges","saveAllSettings","saveButton","confirmationPopup","_reason","animateEl","backwards","el","done","keyframes","reverse","animate","transform","duration","finished","AppearZoomTransition","props","_$createComponent","Transition","onEnter","onExit","children","MessagesPrivacyOption","MessagesPrivacyOption2","privacyRulesInputKey","defaultPrivacyRules","TRANSITION_TIME","PaidSettingsSection","tab","AppAddMembersTab","useSuperTab","commissionPercents","willReceiveDollars","useStarsCommissionAndWithdrawalPrice","store","stars","onExceptionsClick","slider","createTab","open","type","skippable","title","placeholder","takeOut","newPeerIds","setStore","selectedPeerIds","chosenPeers","chosenPeersLabel","length","i18n","users","chats","chosenPeersByType","join","filter","Boolean","_el","style","opacity","exitAnimationPromise","removeProperty","Show","when","isPaid","_el$","_tmpl$","_$insert","Section","name","caption","captionArgs","StarRangeInput","value","onChange","bind","RowTsx","rightContent","_el$2","_tmpl$2","clickable","setBooleanFlag","obj","key","log","logger","useSaveSettings","globalPrivacy","rootScope","useHotReloadGuard","saveGlobalSettings","settings","promise","savePrivacyRules","rules","id","isSaving","StaticRadio","inProps","spanProps","splitProps","_$spread","_$mergeProps","styles","Radio","classList","class","checked","floating","useIsPremium","isPremium","setIsPremium","createSignal","premium","listenerSetter","ListenerSetter","add","newValue","onCleanup","removeAll","DEFAULT_STARS_AMOUNT","OptionsSection","PopupPremium","handlePremiumOptionClick","callback","toastNew","langPackKey","langPackArguments","anchorCallback","hideToast","show","feature","mode","onExitAnimationPromise","_$memo","checkboxField","option","Everybody","ContactsAndPremium","icon","undefined","prev","Paid","useStateStore","isReady","currentOption","currentAllowedChats","currentAllowedUsers","initialState","createStore","createComputed","reconcile","setHasChanges","throttledSetHasChanges","throttle","createEffect","ignoreKeys","deepEqual","createMemo","peer","getUserId","user","useSettings","promiseCollector","usePromiseCollector","privacyRules","createResource","rule","v","MessagesTab","isConfirmationNeededOnClose","setExitAnimationPromise","DEBUG","Portal","mount","header","$$click","_$use","ripple","IconTsx","_$delegateEvents"],"mappings":"w0BAUA,MAAMA,GAAiC,CAAC,CAAC,WAAAC,EAAY,gBAAAC,KAAyD,SAAW,CACvH,GAAG,CAACD,EAAW,EAAG,OAElB,MAAME,EAAkD,CACtD,QAAS,MAAA,EAGP,GAAA,CACF,MAAMC,GAAkB,CACtB,aAAc,iBACd,mBAAoB,oCACpB,OAAQD,EACR,QAAS,CACPA,EACA,CAAC,SAAU,GAAM,QAAS,SAAS,CACrC,EACA,iBAAkB,EAAA,CACnB,EACeD,UACVG,EAAc,CAGpB,GAF8CA,IAEhC,SAAU,MAAM,IAAI,KACpC,CACF,EC9BMC,EAAYA,CAACC,EAAY,KAAU,MAAMC,EAAaC,IAAqB,CAC/E,MAAMC,EAAY,CAAC,WAAY,UAAU,EACtCH,GAAWG,EAAUC,UAExB,MAAMH,EAAGI,QACP,CAACC,UAAWH,CAAS,EACrB,CAACI,SAAU,EACb,CAAA,EAAEC,SAEFN,GACF,EAEMO,GAAyCC,GAC7CC,EACGC,EAAU,CAAA,IACTC,SAAO,CAAA,OAAEd,EAAS,CAAE,EAAA,IACpBe,QAAM,CAAA,OAAEf,EAAU,EAAI,CAAC,EAAA,IAAAgB,UAAA,CAAA,OAEtBL,EAAMK,QAAQ,CAAA,CAAA,ECpBT,IAAAC,GAAAA,IACVA,EAAAA,EAAA,UAAY,CAAZ,EAAA,YACAA,EAAAC,EAAA,mBAAA,CAAA,EAAA,qBACAD,EAAAC,EAAA,KAAA,CAAA,EAAA,OAHUD,IAAAA,GAAA,CAAA,CAAA,EAYL,MAAME,EAAuB,gCAEvBC,GAA0C,CAKrD,CACE,EAAG,gCACL,CACF,EAEaC,EAAkB,+CCTzBC,GAMAX,GAAU,CACd,KAAM,CAACY,EAAK,CAACC,iBAAAA,CAAgB,CAAC,EAAIC,EAAW,EAEvC,CAACC,mBAAAA,EAAoBC,mBAAAA,CAAmB,EAAGC,GAAqC,IAAMjB,EAAMkB,MAAMC,KAAK,EAEvGC,EAAoBA,IAAM,CAC9BR,EAAIS,OAAOC,UAAUT,CAAgB,EAAEU,KAAK,CAC1CC,KAAM,UACNC,UAAW,GACXC,MAAO,yBACPC,YAAa,kCACbC,QAAUC,GAAe,CACvB7B,EAAM8B,SAAS,cAAeD,CAAU,CACzC,EACDE,gBAAiB,CAAC,GAAG/B,EAAMkB,MAAMc,WAAW,CAC9C,CAAC,GAIGC,EAAmBA,IAAM,CAC7B,GAAG,CAACjC,EAAMkB,MAAMc,YAAYE,OAAQ,OAAOC,EAAK,oCAAoC,EAEpF,KAAM,CAACC,MAAAA,EAAOC,MAAAA,GAASrC,EAAMsC,kBAE7B,OAAOC,EAAK,CACVH,EAAMF,OAASC,EAAK,QAAS,CAACC,EAAMF,MAAM,CAAC,EAAI,KAC/CG,EAAMH,OAASC,EAAK,QAAS,CAACE,EAAMH,MAAM,CAAC,EAAI,IAAI,EACnDM,OAAOC,OAAO,EAAG,EAAK,GAG1B,OAAAxC,EACGC,EAAU,CACTC,QAAS,MAAMuC,EAAKlD,IAAS,CAC3B,MAAMD,EAAKmD,EACXnD,EAAGoD,MAAMC,QAAU,IACnB,MAAM5C,EAAM6C,qBACZ,MAAMtD,EAAGI,QAAQ,CAACiD,QAAS,CAAC,EAAG,CAAC,CAAC,EAAG,CAAC/C,SAAUa,CAAgB,CAAA,EAAEZ,SACjEP,EAAGoD,MAAMG,eAAe,SAAS,EACjCtD,GACD,EACDY,OAAQ,MAAMb,EAAIC,IAAS,CACzB,MAAMD,EAAGI,QAAQ,CAACiD,QAAS,CAAC,EAAG,CAAC,CAAC,EAAG,CAAC/C,SAAUa,CAAgB,CAAA,EAAEZ,SACjEN,GACD,EAAA,IAAAa,UAAA,CAAA,OAAAJ,EAEA8C,EAAI,CAAA,IAACC,MAAI,CAAA,OAAEhD,EAAMiD,MAAM,EAAA,IAAA5C,UAAA,CAAA,MAAA6C,EAAAC,KAAAC,OAAAA,EAAAF,EAAAjD,EAEnBoD,EAAO,CACNC,KAAI,wBACJC,QAAO,mCAAA,IACPC,aAAW,CAAA,MAAE,CACXzC,EAAkB,EAClBC,EAAkB,CAAE,CACrB,EAAA,IAAAX,UAAA,CAAA,OAAAJ,EAEAwD,GAAc,CAAA,IAACC,OAAK,CAAA,OAAE1D,EAAMkB,MAAMC,KAAK,EAAA,IAAEwC,UAAQ,CAAA,OAAE3D,EAAM8B,SAAS8B,KAAK,KAAM,OAAO,CAAC,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,IAAA,EAAAR,EAAAF,EAAAjD,EAGvFoD,EAAO,CAACC,KAAI,oBAAqBC,QAAO,oCAAA,IAAAlD,UAAA,CAAA,OAAAJ,EACtC4D,EAAM,CAAA,IACLnC,OAAK,CAAA,OAAES,EAAK,wBAAwB,CAAC,EAAA,IACrC2B,cAAY,CAAA,OAAA,IAAA,CAAA,MAAAC,EAAAC,KAAAZ,OAAAA,EAAAW,EAAyB9B,CAAgB,EAAA8B,CAAA,IAAA,EACrDE,UAAW7C,CAAiB,CAAA,CAAA,CAAA,CAAA,EAAA,IAAA,EAAA8B,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAO1C,EC5FwB,SAAAgB,GAA8BC,EAAQC,EAAcV,EAAgB,CAEvFA,EAAOS,EAAIC,CAAG,EAAI,GAChB,OAAOD,EAAIC,CAAG,CACrB,CCUA,MAAMC,EAAMC,EAAO,iBAAiB,EAY9BC,GAAkB,CAAC,CAAC,MAAArD,EAAO,cAAAsD,EAAe,OAAAvB,EAAQ,WAAAjE,EAAY,kBAAAsD,KAA4C,CACxG,KAAA,CAAC,UAAAmC,GAAaC,IACd,CAAC9D,CAAG,EAAIE,IAER6D,EAAqB,IAAM,CACzB,MAAAC,EAAW,gBAAgBJ,EAAA,CAAe,EAEhDI,EAAS,4BAA8B3B,EAAA,EAAW/B,EAAM,MAAQ,EAEhE0D,EAAS,SAATA,EAAS,OAAW,IACpBV,GAAeU,EAAS,OAAQ,uCAAwC1D,EAAM,SAAWZ,EAAsB,kBAAkB,EAGjI+D,EAAI,uBAAwBO,CAAQ,EAEpC,MAAMC,EAAUJ,EAAU,SAAS,kBAAkB,yBAAyBG,CAAQ,EAElF,OAAAhE,EAAA,QAAQ,QAAQiE,CAAO,EAEpBA,CAAA,EAGHC,EAAmB,SAAW,CAClC,MAAMC,EAA4B,CAAA,EAE5B,CAAC,MAAA1C,EAAO,MAAAD,CAAK,EAAIE,EAAkB,EAEnC,OAAAyC,EAAA,KAAK,GAAGtE,EAAmB,EAE9B4B,EAAM,QAAQ0C,EAAM,KAAK,CAC1B,EAAG,yCACH,MAAA1C,CAAA,CACD,EACED,EAAM,QAAQ2C,EAAM,KAAK,CAC1B,EAAG,8BACH,MAAO,MAAM,QAAQ,IAAI3C,EAAM,IAAK4C,GAAOP,EAAU,SAAS,gBAAgB,aAAaO,CAAE,CAAC,CAAC,CAAA,CAChG,EAGDX,EAAI,oBAAqBU,CAAK,EAEvBN,EAAU,SAAS,kBAAkB,WAAWjE,EAAsBuE,CAAK,CAAA,EAIpF,IAAIE,EAAW,GAiBR,MAfiB,UAAW,CAC9B,GAAA,EAAAA,GAAY,CAACjG,EAAW,GAChB,CAAAiG,EAAA,GAEP,GAAA,CACF,MAAM,QAAQ,IAAI,CAChBN,EAAmB,EACnB1B,EAAW,EAAA6B,EAAqB,EAAA,MAAA,CACjC,EACDlE,EAAI,MAAM,CAAA,QACV,CACWqE,EAAA,EACb,EAAA,CAIJ,yHCrFMC,EAIsCC,GAAY,CACtD,KAAM,CAACnF,EAAOoF,CAAS,EAAIC,EAAWF,EAAS,CAAC,UAAW,WAAY,QAAS,WAAW,CAAC,EAE5F,OAAA,IAAA,CAAA,MAAAjC,EAAAC,KAAAmC,OAAAA,EAAApC,EAAAqC,EAAA,CAAA,IAAA,OAAA,CAAA,OACSC,EAAOC,KAAK,EAAA,IACnBC,WAAS,CAAA,MAAE,CACT,CAAC1F,EAAM2F,KAAK,EAAG,CAAC,CAAC3F,EAAM2F,MACvB,CAACH,EAAOI,OAAO,EAAG5F,EAAM4F,QACxB,CAACJ,EAAOK,QAAQ,EAAG7F,EAAM6F,SACzB,cAAe7F,EAAM6F,SACrB,GAAG7F,EAAM0F,UACV,CAAA,EACGN,CAAS,EAAA,GAAA,EAAA,EAAAlC,CAAA,IAEjB,EChBM4C,EAAeA,IAAM,CACzB,KAAM,CAACrB,UAAAA,CAAU,EAAGC,EAAiB,EAE/B,CAACqB,EAAWC,CAAY,EAAIC,EAAaxB,EAAUyB,OAAO,EAI1DC,EAAiB,IAAIC,EAE3BD,OAAAA,EAAeE,IAAI5B,CAAS,EAAE,iBAAmB6B,GAAa,CAC5DN,EAAaM,CAAQ,CACvB,CAAC,EAEDC,EAAU,IAAM,CACdJ,EAAeK,UAAS,CAC1B,CAAC,EAEMT,CACT,ECPMU,GAAuB,GAEvBC,GAKA1G,GAAU,CACd,KAAM,CAAC2G,aAAAA,CAAa,EAAGjC,EAAiB,EAElCqB,EAAYD,IAGZc,EAA4BC,GAAyB,IAAM,CAC/D,GAAGd,EAAS,EAAI,OAAOc,IAEvBC,GAAS,CACPC,YAAa,wCACbC,kBAAmB,CACjBC,EAAe,IAAM,CACnBC,KACAP,EAAaQ,KAAK,CAChBC,QAAS,iBACX,CAAC,CACH,CAAC,CAAC,CAEN,CAAC,GAGG7D,EAAOtD,EACVC,EAAU,CACTmH,KAAI,QACJlH,QAAS,MAAMZ,EAAIC,IAAS,CAC1B,MAAMD,EAAGI,QAAQ,CAACiD,QAAS,CAAC,EAAG,CAAC,CAAC,EAAG,CAAC/C,SAAUa,CAAgB,CAAA,EAAEZ,SACjEN,GACD,EACDY,OAAQ,MAAMb,EAAIC,IAAS,CACzB,MAAMqF,EAAUtF,EAAGI,QAAQ,CAACiD,QAAS,CAAC,EAAG,CAAC,CAAC,EAAG,CAAC/C,SAAUa,CAAgB,CAAA,EAAEZ,SAC3EE,EAAMsH,uBAAuBzC,CAAO,EACpC,MAAMA,EACNrF,GACD,EAAA,IAAAa,UAAA,CAAA,OAGCkH,EAACvH,IAAAA,CAAAA,EAAMiD,MAAM,EACXd,EAAAA,EAAK,uBAAwB,CAAC8E,EAAe,IAAM,KAAKN,EAAaQ,KAAI,CAAE,CAAC,CAAC,EAC7EhF,EAAK,2CAA2C,CAAC,EAGxD,EAED,OAAAlC,EACGoD,EAAO,CACNC,KAAI,uBACJC,QAASA,EAAO,IAAAlD,UAAA,CAAA,MAAAJ,CAAAA,EAEf4D,EAAM,CAAA,IACL2D,eAAa,CAAA,OAAAvH,EACViF,EAAW,CACVW,SAAQ,GAAA,IACRD,SAAO,CAAA,OAAE5F,EAAMkB,MAAMuG,SAAWnH,EAAsBoH,SAAS,CAAA,CAAA,CAAA,EAGnEzD,UAAWA,IAAM,CACfjE,EAAM8B,SAAS,SAAUxB,EAAsBoH,SAAS,CACzD,EAAA,IACDhG,OAAK,CAAA,OAAES,EAAK,oCAAoC,CAAC,EAAAlC,EAAAA,EAElD4D,EAAM,CAAA,IACL2D,eAAa,CAAA,OACXD,QAAAxB,EAAW,CAAA,EAAA9F,GAAAA,EAAKiF,EAAW,CACzBW,SAAQ,GAAA,IACRD,SAAO,CAAA,OAAE5F,EAAMkB,MAAMuG,SAAWnH,EAAsBqH,kBAAkB,EACxE,CAAA,EAAA,IAEJC,MAAI,CAAA,OAAG7B,EAAS,EAAsB8B,OAAjB,cAA0B,EAAA,IAC/C5D,WAAS,CAAA,OAAE2C,EAAyB,IAAM,CACxC5G,EAAM8B,SAAS,SAAUxB,EAAsBqH,kBAAkB,CACnE,CAAC,CAAC,EAAA,IACFjG,OAAK,CAAA,OAAES,EAAK,4BAA4B,CAAC,EAAAlC,EAAAA,EAE1C4D,EAAM,CAAA,IACL2D,eAAa,CAAA,OACXD,QAAAxB,EAAW,CAAA,EAAA9F,GAAAA,EAAKiF,EAAW,CAACW,SAAQ,GAAA,IAACD,SAAO,CAAA,OAAE5F,EAAMiD,MAAM,EAAI,CAAA,EAAA,IAEhE2E,MAAI,CAAA,OAAG7B,EAAS,EAAsB8B,OAAjB,cAA0B,EAAA,IAC/C5D,WAAS,CAAA,OAAE2C,EAAyB,IAAM,CACxC5G,EAAM8B,SAASgG,IAAS,CACtBL,OAAQnH,EAAsByH,KAC9B5G,MAAO2G,EAAK3G,OAASsF,EACtB,EAAC,CACJ,CAAC,CAAC,EAAA,IACF/E,OAAK,CAAA,OAAES,EAAK,gCAAgC,CAAC,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAIrD,EC1FM6F,GAAgB,CAAC,CACrB,QAAAC,EACA,cAAAzD,EACA,cAAA0D,EAAe,oBAAAC,EAAqB,oBAAAC,CACtC,IAAyB,CACvB,IAAIC,EAAsC,CAAA,EAC1C,KAAM,CAACnH,EAAOY,CAAQ,EAAIwG,EAAmC,CAAE,CAAA,EAE/DC,EAAe,IAAM,CACfN,EAAQ,IAEGI,EAAA,CACb,OAAQH,EAAc,EACtB,MAAO,OAAO1D,EAAc,EAAE,2BAA2B,GAAK,OAC9D,YAAa,CAAC,GAAG4D,IAAuB,GAAGD,GAAqB,CAAA,EAGlErG,EAAS0G,EAAU,gBAAgBH,CAAY,CAAC,CAAC,EAAA,CAClD,EAGD,KAAM,CAACrJ,EAAYyJ,CAAa,EAAIxC,EAAa,EAAK,EAChDyC,EAAyBC,EAASF,EAAe,IAAK,EAAI,EAGhEG,EAAa,IAAM,CACX,MAAAC,EAAiD5F,EAAA,EAAsC,GAA3B,CAAC,cAAe,OAAO,EAEzFyF,EAAuB,CAACI,EAAU5H,EAAOmH,EAAcQ,CAAU,CAAC,CAAA,CACnE,EAGD,MAAM5F,EAAS8F,EAAW,IAAM7H,EAAM,SAAWZ,EAAsB,IAAI,EAQpE,MAAA,CACLY,EACAY,EACA,CAAC,WAAA9C,EAAY,OAAAiE,EAAQ,kBATG,KAA0B,CAClD,MAAO/B,EAAM,YAAY,OAAe8H,GAAAA,EAAK,UAAW,CAAA,EAAE,IAAYA,GAAAA,EAAK,UAAU,EACrF,MAAO9H,EAAM,YAAY,OAAe8H,GAAAA,EAAK,QAAQ,CAAA,EAOf,CAAA,CAE1C,ECjEaC,GAAaC,GACrBA,aAAgB,OAAeA,EAAK,SAAS,SAAS,EAAI,EACtDA,EAAK,SAAS,EAAI,ECMrBC,GAAc,IAAM,CAClB,KAAA,CAAC,UAAA1E,GAAaC,IACd0E,EAAmBC,KAEnBtD,EAAYD,IAGZ,CAACwD,CAAY,EAAIC,EAAe,IAAM,CAC1C,MAAM1E,EAAUJ,EAAU,SAAS,kBAAkB,WAAWjE,CAAoB,EACpF,OAAA4I,EAAiB,QAAQvE,CAAO,EACzBA,CAAA,CACR,EAEK,CAACL,CAAa,EAAI+E,EAAe,IAAM,CAC3C,MAAM1E,EAAUJ,EAAU,SAAS,kBAAkB,yBAAyB,EAC9E,OAAA2E,EAAiB,QAAQvE,CAAO,EACzBA,CAAA,CACR,EA4BM,MAAA,CACL,QA1Bc,IAAMyE,EAAa,QAAU,SAAW9E,EAAc,QAAU,QA4B9E,cAAAA,EACA,aAAA8E,EAEA,cA7BoB,IAChBvD,EAAU,EAEXvB,EAAgB,EAAA,4BAAoClE,EAAsB,KAE1EkE,EAAA,EAAgB,OAAO,qCAA6ClE,EAAsB,mBAEtFA,EAAsB,UANLA,EAAsB,UA6B9C,oBApB0B,IAC1BgJ,EACE,GAAA,OAAQE,GAASA,EAAK,IAAM,wBAAwB,GACpD,OAAYA,GAAM,KAAK,EAAE,KAAA,GACzB,OAAYN,EAAK,UAAU,GAAK,GAiBlC,oBAf0B,IAC1BI,KACE,KAAME,GAASA,EAAK,IAAM,mCAAmC,GAAG,OAChE,IAAIP,EAAS,GACb,OAAQQ,GAAMA,IAAM,MAAS,GAAK,EAWpC,CAEJ,yCC9CMpF,EAAMC,EAAO,oBAAoB,EAGjCoF,GAAcA,IAAM,CACxB,KAAM,CAAC9I,CAAG,EAAIE,IAER,CACJmH,QAAAA,EACAzD,cAAAA,EAAe8E,aAAAA,EACfpB,cAAAA,EAAeE,oBAAAA,EAAqBD,oBAAAA,CACrC,EAAGgB,GAAW,EAET,CAACjI,EAAOY,EAAU,CAACmB,OAAAA,EAAQjE,WAAAA,EAAYsD,kBAAAA,CAAkB,CAAA,EAAI0F,GAAc,CAC/EC,QAAAA,EACAzD,cAAAA,EACA0D,cAAAA,EAAeC,oBAAAA,EAAqBC,oBAAAA,CACtC,CAAC,EAEKnJ,EAAkBsF,GAAgB,CACtCrD,MAAAA,EACAsD,cAAAA,EACAvB,OAAAA,EACAjE,WAAAA,EACAsD,kBAAAA,CACF,CAAC,EAED1B,EAAI+I,4BAA8B5K,GAA+B,CAACC,WAAAA,EAAYC,gBAAAA,CAAe,CAAC,EAG9F,KAAM,CAAC4D,EAAsB+G,CAAuB,EAAI3D,EAAY,EAEpE,OAAG4D,GAAOjB,EAAa,IAAM,CAC3BvE,EAAI,sBAAuBiF,EAAY,CAAE,EACzCjF,EAAI,uBAAwBG,EAAa,CAAE,CAC7C,CAAC,EAGDvE,EACG8C,EAAI,CAAA,IAACC,MAAI,CAAA,OAAEiF,EAAO,CAAE,EAAA,IAAA5H,UAAA,CAAA,MAAAJ,CAAAA,EAClB6J,EAAM,CAAA,IAACC,OAAK,CAAA,OAAEnJ,EAAIoJ,MAAM,EAAA,IAAA3J,UAAA,CAAA,OAAAJ,EACtBF,GAAoB,CAAA,IAAAM,UAAA,CAAA,OAAAJ,EAClB8C,EAAI,CAAA,IAACC,MAAI,CAAA,OAAEhE,EAAU,CAAE,EAAA,IAAAqB,UAAA,CAAA,MAAA6C,EAAAC,KAAAD,OAAAA,EAAA+G,QAIX,IAAM,KAAKhL,IAAiBiL,GAFjCC,GAAMjH,EAAA,IAAA,EAAA,EAAAE,EAAAF,EAAAjD,EAITmK,GAAO,CAACxC,KAAI,OAAA,CAAA,CAAA,EAAA1E,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAAjD,EAAAA,EAMpByG,GAAc,CAAA,IACbzD,QAAM,CAAA,OAAEA,EAAM,CAAE,EAChB/B,MAAOA,EACPY,SAAUA,EACVwF,uBAAwBsC,EAAuB3J,EAAAA,EAGhDU,GAAmB,CAAA,IAClBsC,QAAM,CAAA,OAAEA,EAAM,CAAE,EAChB/B,MAAOA,EACPY,SAAUA,EAAQ,IAClBQ,mBAAiB,CAAA,OAAEA,EAAiB,CAAE,EAAA,IACtCO,sBAAoB,CAAA,OAAEA,EAAoB,CAAE,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAIpD,EAE2BwH,GAAA,CAAA,OAAA,CAAA"}
{"version":3,"file":"index-CFynF1EA.js","sources":["../src/components/addToFolderDropdownMenu/kindaFuzzyFinder.ts","../src/components/addToFolderDropdownMenu/utils.ts","../src/components/addToFolderDropdownMenu/hooks.tsx","../src/components/addToFolderDropdownMenu/index.tsx"],"sourcesContent":["export default function kindaFuzzyFinder(str: string, toFind: string) {\n  return kindaFuzzyFinderImpl(str.toLowerCase(), toFind.toLowerCase(), toFind.length);\n}\n\nfunction kindaFuzzyFinderImpl(str: string, toFind: string, fm: number) {\n  let bestIndicies: number[] = [], bestScore = 0;\n\n  const n = str.length;\n  const m = toFind.length;\n\n  for(let j = 0; j < m; j++) {\n    for(let i = 0; i < n; i++) {\n      if(str[i] !== toFind[j]) continue;\n\n      const {found} = kindaFuzzyFinderImpl(str.slice(i + 1), toFind.slice(j + 1), fm);\n      const newIndicies = [i, ...found.map(fi => fi + i + 1)];\n\n      const s = score(str, toFind, newIndicies, fm, true) - punishments.missing(fm) * j;\n      if(s > bestScore) {\n        bestScore = s;\n        bestIndicies = newIndicies;\n      }\n    }\n  }\n\n  return {found: bestIndicies, score: score(str, toFind, bestIndicies, fm, true)};\n}\n\nconst punishments = {\n  missing: (length: number) => 1 / length,\n  gap: (length: number, gap: number) => 0.25 / length * gap\n};\n\nfunction score(str: string, toFind: string, indicies: number[], fm: number, punishLastMissing: boolean) {\n  const n = str.length, m = toFind.length, k = indicies.length;\n  if(!k) return 0;\n\n  let result = 1;\n\n  let fi = 0, prevsi = -1;\n  for(let i = 0; i < k && fi < m; i++) {\n    const si = indicies[i];\n    if(!(si < n)) break;\n\n    while(str[si] !== toFind[fi] && fi < m) {\n      fi++;\n      result -= punishments.missing(fm);\n    }\n    fi++;\n\n    if(prevsi != -1 && si - prevsi > 1) {\n      result -= punishments.gap(m, si - prevsi - 1);\n    }\n\n    prevsi = si;\n  }\n\n  if(punishLastMissing) result -= (fm - fi) * punishments.missing(fm);\n\n  return result;\n}\n\nif(false) {\n  const testCases = [\n    ['hello world', ['hlo', 'hew', 'wld', 'world', 'xyz']],\n    ['fuzzy finder', ['fzy', 'fin', 'fndr', 'zzi', 'der']],\n    ['JavaScript', ['jvs', 'scr', 'java', 'script', 'pt']],\n    ['keyboard', ['key', 'kbd', 'brd', 'board', 'z']],\n    ['console.log', ['cl', 'csl', 'log', 'con', 'x']],\n    ['performance', ['perf', 'mance', 'form', 'xyz', 'per']],\n    ['stack overflow', ['stov', 'sov', 'flow', 'ovr', 'ack']],\n    ['regex match', ['rx', 'mat', 'rmt', 'match', 'gg']],\n    ['autocomplete', ['auto', 'cmp', 'complete', 'lete', 'ct']],\n    ['developer tools', ['dev', 'tools', 'dvlp', 'dt', 'tl']],\n    ['machine learning', ['ml', 'mach', 'learn', 'mle', 'xyz']],\n    ['artificial intelligence', ['ai', 'art', 'intel', 'bficial', 'ce']],\n    ['data structures', ['ds', 'str', 'data', 'stru', 'zzz']],\n    ['frontend backend', ['fb', 'fe', 'be', 'front', 'back']],\n    ['react components', ['rc', 'cmp', 'comp', 'reac', 'ents']],\n    ['node.js server', ['nd', 'srv', 'node', 'js', 'ser']],\n    ['web development', ['web', 'dev', 'wdev', 'lop', 'zzz']],\n    ['browser history', ['bh', 'hist', 'browse', 'his', 'story']],\n    ['terminal command', ['term', 'cmd', 'com', 'tc', 'mand']]\n  ] as const;\n\n  for(const [source, terms] of testCases) {\n    console.log(`\\nSource: \"${source}\"`);\n    for(const term of terms) {\n      const {found, score} = kindaFuzzyFinder(source, term);\n      const arr = new Array(source.length).fill('^').map((_, i) => found.includes(i) ? source[i] : _);\n      console.log(`  Search: \"${term}\" -> (${score.toFixed(2)}) ${arr.join('')}`);\n    }\n  }\n}\n","import {onCleanup} from 'solid-js';\nimport {Middleware} from '../../helpers/middleware';\nimport {TextWithEntities} from '../../layer';\nimport getPeerId from '../../lib/appManagers/utils/peers/getPeerId';\nimport {CustomEmojiRendererElement} from '../../lib/customEmoji/renderer';\nimport {logger, LogTypes} from '../../lib/logger';\nimport {FOLDER_ID_ALL, FOLDER_ID_ARCHIVE} from '../../lib/mtproto/mtproto_config';\nimport rootScope from '../../lib/rootScope';\nimport {MyDialogFilter} from '../../lib/storages/filters';\nimport wrapFolderTitle from '../wrappers/folderTitle';\nimport styles from './styles.module.scss';\n\n\nexport const log = logger('AddToFolderDropdownMenu', LogTypes.Debug);\n\nexport async function fetchDialogFilters() {\n  const filters = await rootScope.managers.filtersStorage.getDialogFilters();\n\n  return filters\n  .filter(filter => filter.id !== FOLDER_ID_ARCHIVE && filter.id !== FOLDER_ID_ALL)\n  .sort((a, b) => {\n    if(!a.id || !b.id) return 0;\n    return a?.localId - b?.localId;\n  });\n}\n\nconst p = (p: PeerId) => Math.abs(p);\n\nexport async function addToFilter(filter: MyDialogFilter, peerId: PeerId) {\n  log.debug('addToFilter before', filter);\n  filter = {...filter};\n\n  if(filter._ === 'dialogFilter') {\n    filter.excludePeerIds = filter.excludePeerIds?.filter(excludedPeerId => p(excludedPeerId) !== p(peerId));\n    filter.exclude_peers = filter.exclude_peers?.filter(inputPeer => p(getPeerId(inputPeer)) !== p(peerId));\n  }\n\n  const hasPinned = filter.pinnedPeerIds.find(pinnedPeerId => p(pinnedPeerId) === p(peerId));\n\n  if(!hasPinned) {\n    filter.includePeerIds = [...(filter.includePeerIds || []).filter(includedPeerId => p(includedPeerId) !== p(peerId)), peerId];\n    filter.include_peers = [...(filter.include_peers || []).filter(inputPeer => p(getPeerId(inputPeer)) !== p(peerId)), await rootScope.managers.appPeersManager.getInputPeerById(peerId)];\n  }\n\n  log.debug('addToFilter after', filter);\n\n  await rootScope.managers.filtersStorage.updateDialogFilter(filter);\n}\n\nexport async function removeFromFilter(filter: MyDialogFilter, peerId: PeerId) {\n  log.debug('removeFromFilter before', filter);\n  filter = {...filter};\n\n  filter.includePeerIds = filter.includePeerIds?.filter(includedPeerId => p(peerId) !== p(includedPeerId));\n  filter.include_peers = filter.include_peers?.filter(inputPeer => p(getPeerId(inputPeer)) !== p(peerId));\n\n  filter.pinnedPeerIds = filter.pinnedPeerIds?.filter(pinnedPeerId => p(peerId) !== p(pinnedPeerId));\n  filter.pinned_peers = filter.pinned_peers?.filter(inputPeer => p(getPeerId(inputPeer)) !== p(peerId));\n\n  if(filter._ === 'dialogFilter') {\n    filter.excludePeerIds = [...(filter.excludePeerIds || []).filter(excludedPeerId => p(excludedPeerId) !== p(peerId)), peerId];\n    filter.exclude_peers = [...(filter.exclude_peers || []).filter(inputPeer => p(getPeerId(inputPeer)) !== p(peerId)), await rootScope.managers.appPeersManager.getInputPeerById(peerId)];\n  }\n\n  log.debug('removeFromFilter after', filter);\n\n  await rootScope.managers.filtersStorage.updateDialogFilter(filter);\n}\n\nexport function wrapFolderTitleInSpan(title: TextWithEntities.textWithEntities, middleware: Middleware) {\n  const span: HTMLSpanElement = document.createElement('span');\n  const fragment = wrapFolderTitle(title, middleware, true);\n\n  span.append(fragment);\n\n  const renderer: CustomEmojiRendererElement = span.querySelector('custom-emoji-renderer-element');\n  renderer?.setTextColor('primary-text-color');\n\n  const treeWalker = document.createTreeWalker(span, NodeFilter.SHOW_TEXT);\n\n  const nodes: Node[] = [];\n  const charSpansGroups: HTMLElement[][] = [];\n\n  while(treeWalker.nextNode()) {\n    nodes.push(treeWalker.currentNode);\n  }\n\n  for(const node of nodes) {\n    const fragment = document.createDocumentFragment();\n\n    const charSpans = node.nodeValue.split('').map(char => {\n      const charSpan = document.createElement('span');\n      charSpan.innerText = char;\n      return charSpan;\n    });\n\n    charSpansGroups.push(charSpans);\n    fragment.append(...charSpans);\n\n    node.parentNode.replaceChild(fragment, node);\n  }\n\n  return {\n    span,\n    charSpansGroups\n  };\n}\n\nexport function highlightTextNodes(nodeGroups: HTMLElement[][], indicies: number[]) {\n  let acc = 0;\n\n  const toCleanup: HTMLElement[] = [];\n\n  for(const nodeGroup of nodeGroups) {\n    const n = nodeGroup.length;\n\n    const localIndicies = indicies.filter(i => i >= acc && i < acc + n).map(i => i - acc);\n    const m = localIndicies.length;\n\n    acc += n;\n\n    for(let i = 0; i < m; i++) {\n      let j = i;\n      while(j < m - 1 && localIndicies[j + 1] - 1 === localIndicies[j]) j++;\n\n      if(j === i) {\n        const li = localIndicies[i];\n        const nodeSingle = nodeGroup[li];\n        nodeSingle.classList.add(styles.Char, styles.single);\n        toCleanup.push(nodeSingle);\n        continue;\n      }\n\n      const nodeStart = nodeGroup[localIndicies[i]];\n      const nodeEnd = nodeGroup[localIndicies[j]];\n\n      nodeStart.classList.add(styles.Char, styles.start);\n      nodeEnd.classList.add(styles.Char, styles.end);\n\n      toCleanup.push(nodeStart, nodeEnd);\n\n      for(let k = i + 1; k < j; k++) {\n        const nodeMiddle = nodeGroup[localIndicies[k]];\n        nodeMiddle.classList.add(styles.Char, styles.middle);\n        toCleanup.push(nodeMiddle);\n      }\n\n      i = j;\n    }\n  }\n\n  onCleanup(() => {\n    toCleanup.forEach(el => {\n      el.className = '';\n    });\n  });\n}\n","import {Accessor, createEffect, createMemo, createSignal, JSX, onCleanup, Setter, Show} from 'solid-js';\nimport {unwrap} from 'solid-js/store';\nimport {Transition} from 'solid-transition-group';\nimport contextMenuController from '../../helpers/contextMenuController';\nimport {CLICK_EVENT_NAME} from '../../helpers/dom/clickEvent';\nimport noop from '../../helpers/noop';\nimport createMiddleware from '../../helpers/solid/createMiddleware';\nimport {Dialog} from '../../layer';\nimport {isDialog} from '../../lib/appManagers/utils/dialogs/isDialog';\nimport {i18n} from '../../lib/langPack';\nimport rootScope from '../../lib/rootScope';\nimport {MyDialogFilter} from '../../lib/storages/filters';\nimport {ButtonMenuItem, ButtonMenuItemOptions} from '../buttonMenu';\nimport {IconTsx} from '../iconTsx';\nimport extractEmojiFromFilterTitle from '../sidebarLeft/foldersSidebarContent/extractEmojiFromFilterTitle';\nimport FolderAnimatedIcon from '../sidebarLeft/foldersSidebarContent/folderAnimatedIcon';\nimport {getIconForFilter} from '../sidebarLeft/foldersSidebarContent/utils';\nimport showTooltip from '../tooltip';\nimport kindaFuzzyFinder from './kindaFuzzyFinder';\nimport styles from './styles.module.scss';\nimport {addToFilter, highlightTextNodes, log, removeFromFilter, wrapFolderTitleInSpan} from './utils';\n\n\nconst MIN_FUZZY_SCORE = 0.25;\n\n\ntype CreateButtonMenuIconArgs = {\n  filter: MyDialogFilter;\n  isChecked: Accessor<boolean>;\n  docId?: DocId;\n  emoji?: string;\n}\n\nexport const createButtonMenuIcon = ({filter, isChecked, docId, emoji}: CreateButtonMenuIconArgs) => {\n  const [failedToFetchIcon, setFailedToFetchIcon] = createSignal(false);\n\n  return (\n    <span class={`btn-menu-item-icon ${styles.ItemIcon}`}>\n      <Show\n        when={(docId || emoji) && !failedToFetchIcon()}\n        fallback={<IconTsx icon={getIconForFilter(filter)} />}\n      >\n        <FolderAnimatedIcon\n          managers={rootScope.managers}\n          color='primary-text-color'\n          docId={docId}\n          emoji={emoji}\n          size={20}\n          onFail={() => setFailedToFetchIcon(true)}\n          dontAnimate={filter.pFlags?.title_noanimate}\n        />\n      </Show>\n      <Transition\n        enterActiveClass={styles.AppearZoomEnterActive}\n        exitActiveClass={styles.AppearZoomEnterActive}\n        enterClass={styles.AppearZoomEnter}\n        exitToClass={styles.AppearZoomExitTo}\n      >\n        <Show when={isChecked()}>\n          <span class={styles.ItemIconCheck}>\n            <IconTsx icon='check' />\n          </span>\n        </Show>\n      </Transition>\n    </span>\n  ) as HTMLSpanElement\n};\n\n\ntype CreateButtonMenuLabelArgs = {\n  label: JSX.Element;\n  isSelected: Accessor<boolean>;\n};\n\nexport const createButtonMenuLabel = ({label, isSelected}: CreateButtonMenuLabelArgs) => (\n  <span class={styles.ItemLabel}>\n    {label}\n    <Show when={isSelected()}>\n      <IconTsx icon='enter' class={styles.ItemLabelEnter} />\n    </Show>\n  </span>\n) as HTMLSpanElement;\n\n\ntype CreateFolderItemsArgs = {\n  filters: Accessor<MyDialogFilter[]>;\n  currentFilter: Accessor<number>;\n  isInFilter: (filter: MyDialogFilter) => boolean;\n  isSelected: (filterId: number) => boolean;\n  onToggle: (filter: MyDialogFilter) => void;\n};\n\nexport type FolderItem = ReturnType<ReturnType<typeof createFolderItems>>[number];\n\nexport const createFolderItems = ({filters, isInFilter, isSelected, onToggle, currentFilter}: CreateFolderItemsArgs) => createMemo(() => {\n  const middleware = createMiddleware();\n  log.debug('creating folder items');\n\n  onCleanup(() => {\n    log.debug('destroying folder items middleware');\n    middleware.destroy();\n  });\n\n  return filters().map((filter) => {\n    const extractedTitle = extractEmojiFromFilterTitle(filter.title);\n    const {span, charSpansGroups} = wrapFolderTitleInSpan(extractedTitle.text, middleware.get());\n    span.classList.add(styles.ItemLabelText);\n\n    const options: ButtonMenuItemOptions = {\n      iconElement: createButtonMenuIcon({filter, isChecked: () => isInFilter(filter), docId: extractedTitle.docId, emoji: extractedTitle.emoji}),\n      textElement: createButtonMenuLabel({label: span, isSelected: () => isSelected(filter.id)}),\n      onClick: noop\n    };\n\n    const buttonMenuItem = ButtonMenuItem(options);\n\n    options.element?.addEventListener(CLICK_EVENT_NAME, async(e) => {\n      if(e.shiftKey && currentFilter() !== filter.id) e.stopPropagation();\n      onToggle(filter);\n    }, true);\n    options.element?.classList.add(styles.Item);\n\n    createEffect(() => {\n      if(!isSelected(filter.id)) return;\n      options.element?.classList.add(styles.selected);\n      onCleanup(() => void options.element?.classList.remove(styles.selected));\n    });\n\n    return {\n      filter,\n      textContent: span.textContent,\n      buttonMenuItem,\n      element: options.element,\n      charSpansGroups\n    };\n  });\n});\n\n\ntype UseToggleDialogInFilterArgs = {\n  dialog: Accessor<Dialog.dialog>;\n  isInFilter: (filter: MyDialogFilter) => boolean;\n  onNewDialog: (dialog: Dialog.dialog) => void;\n};\n\nexport const useToggleDialogInFilter = ({dialog, onNewDialog, isInFilter}: UseToggleDialogInFilterArgs) => {\n  let hasRequestInProgress = false;\n\n  return async(filter: MyDialogFilter) => {\n    if(hasRequestInProgress || !filter) return;\n\n    const unwrapped = unwrap(filter);\n\n    hasRequestInProgress = true;\n\n    try {\n      await (isInFilter(filter) ? removeFromFilter(unwrapped, dialog().peerId) : addToFilter(unwrapped, dialog().peerId));\n      const newDialog = await rootScope.managers.dialogsStorage.getAnyDialog(dialog().peerId);\n      if(!isDialog(newDialog)) return;\n      onNewDialog(newDialog);\n    } catch{} finally {\n      hasRequestInProgress = false;\n    }\n  }\n};\n\n\ntype CreateSearchableFoldersArgs = {\n  folderItems: Accessor<FolderItem[]>;\n  search: Accessor<string>;\n  isSelected: (filterId: number) => boolean;\n  setSelected: (idx?: number) => void;\n};\n\nexport const createSearchableFolders = ({folderItems, search, isSelected, setSelected}: CreateSearchableFoldersArgs) => createMemo(() => {\n  if(!search()) return {\n    folders: folderItems(),\n    visibleFoldersCount: folderItems().length\n  };\n\n  const fuzziedFolders = folderItems().map((src) => ({\n    finderResult: kindaFuzzyFinder(src.textContent, search()),\n    src\n  }));\n\n  const sortedFolders = fuzziedFolders\n  .sort(({finderResult: {found: found1, score: score1}}, {finderResult: {found: found2, score: score2}}) =>\n    score1 === score2 ? (found1[0] || 0) - (found2[0] || 0) : score2 - score1\n  );\n\n  setSelected(0);\n  onCleanup(() => void setSelected());\n\n  const visibleFoldersCount = sortedFolders.filter(({src, finderResult}) => {\n    if(finderResult.score >= MIN_FUZZY_SCORE) {\n      createEffect(() => {\n        if(isSelected(src.filter.id)) src.element.scrollIntoView({block: 'center'});\n      });\n\n      highlightTextNodes(src.charSpansGroups, finderResult.found);\n\n      return true;\n    }\n\n    src.buttonMenuItem.forEach(el => el.classList.add(styles.Hidden));\n    onCleanup(() => void src.buttonMenuItem.forEach(el => el.classList.remove(styles.Hidden)))\n  }).length;\n\n  return {\n    folders: sortedFolders.map(({src}) => src),\n    visibleFoldersCount\n  };\n});\n\n\ntype UseTooltipHintArgs = {\n  pivot: Accessor<HTMLElement>;\n};\n\nexport const useTooltipHint = ({pivot}: UseTooltipHintArgs) => {\n  let closeTooltip = noop;\n\n  setTimeout(() => {\n    closeTooltip = undefined;\n  }, 200); // wait opening animation\n\n  onCleanup(() => {\n    closeTooltip?.();\n  });\n\n  const showHint = () => {\n    if(closeTooltip) return;\n    closeTooltip = showTooltip({\n      element: pivot(),\n      vertical: 'top',\n      textElement: i18n('AddToFolderTip'),\n      lighter: true,\n      auto: true,\n      useOverlay: false,\n      onClose: () => {\n        closeTooltip = undefined;\n      }\n    }).close;\n  };\n\n  const closeAndDisableTooltip = () => {\n    closeTooltip?.();\n    closeTooltip = noop; // prevent further opening of the tooltip\n  };\n\n  return {\n    showHint,\n    closeAndDisableTooltip\n  }\n};\n\n\ntype UseInputKeydownArgs = {\n  search: Accessor<string>;\n  setSearch: Setter<string>\n  selected: Accessor<number>;\n  setSelected: Setter<number>;\n  selectedFilter: Accessor<MyDialogFilter>;\n  currentFilter: Accessor<number>;\n  onToggle: (filter: MyDialogFilter) => void;\n  visibleFoldersCount: Accessor<number>;\n};\n\nexport const useInputKeydown = ({search, setSearch, selected, setSelected, selectedFilter, currentFilter, onToggle, visibleFoldersCount}: UseInputKeydownArgs) => {\n  return (e: KeyboardEvent) => {\n    if(['ArrowUp', 'ArrowLeft', 'ArrowDown', 'ArrowRight', 'Enter'].includes(e.code)) e.preventDefault();\n\n    if(e.code === 'Escape') {\n      if(search()) setSearch('');\n      else contextMenuController.close();\n    }\n\n    if(e.code === 'Enter' && selectedFilter()) {\n      onToggle(selectedFilter());\n      if(!e.shiftKey || currentFilter() === selectedFilter().id) contextMenuController.close();\n      return;\n    }\n\n    if(typeof selected() !== 'number') return;\n\n    const increment = ['ArrowUp', 'ArrowLeft'].includes(e.code) ? -1 : ['ArrowDown', 'ArrowRight'].includes(e.code) ? 1 : 0;\n    setSelected(prev => (prev + increment + visibleFoldersCount()) % visibleFoldersCount())\n  };\n};\n","import {createComputed, createEffect, createMemo, createSelector, createSignal, For, onCleanup, onMount, Show} from 'solid-js';\nimport {IS_MOBILE} from '../../environment/userAgent';\nimport {CLICK_EVENT_NAME} from '../../helpers/dom/clickEvent';\nimport {Dialog} from '../../layer';\nimport {i18n} from '../../lib/langPack';\nimport defineSolidElement, {PassedProps} from '../../lib/solidjs/defineSolidElement';\nimport {MyDialogFilter} from '../../lib/storages/filters';\nimport appNavigationController from '../appNavigationController';\nimport {IconTsx} from '../iconTsx';\nimport Scrollable from '../scrollable2';\nimport {createFolderItems, createSearchableFolders, FolderItem, useInputKeydown, useToggleDialogInFilter, useTooltipHint} from './hooks';\nimport styles from './styles.module.scss';\nimport {fetchDialogFilters} from './utils';\n\nif(import.meta.hot) import.meta.hot.accept();\n\n\nconst MAX_VISIBLE_SCROLL_ITEMS = 6;\nconst HAVE_SCROLL_WHEN_ABOVE = 8; // and search too\n\n\ntype Props = {\n  dialog: Dialog.dialog;\n  filters: MyDialogFilter[];\n  currentFilter: () => number;\n  onCleanup?: () => void;\n  onNewDialog?: (dialog: Dialog.dialog) => void;\n};\n\n\nconst AddToFolderDropdownMenu = defineSolidElement({\n  name: 'add-to-folder-dropdown-menu',\n  component: (props: PassedProps<Props>, _, controls: {closeTooltip: () => void}) => {\n    //\n    props.element.classList.add('btn-menu', styles.Container);\n\n    let infoIcon: HTMLElement, label: HTMLDivElement, thumb: HTMLDivElement;\n\n    const [search, setSearch] = createSignal('');\n    const [selected, setSelected] = createSignal<number>();\n    const [selectableFolders, setSelectableFolders] = createSignal<FolderItem[]>([]);\n\n    const isInFilter = createSelector(\n      () => props.dialog,\n      (filter: MyDialogFilter, dialog) => !!dialog?.[`index_${filter.localId}`]\n    );\n\n    const selectedFilter = createMemo(() => selectableFolders()[selected()]?.filter);\n    const isSelected = createSelector(() => selectedFilter()?.id);\n\n    const renderAsScrollable = createMemo(() => props.filters.length > HAVE_SCROLL_WHEN_ABOVE);\n\n    const toggleDialogInFilter = useToggleDialogInFilter({\n      dialog: () => props.dialog,\n      onNewDialog: (newDialog) => {\n        props.dialog = newDialog;\n        props.onNewDialog?.(newDialog);\n      },\n      isInFilter\n    });\n\n    const folderItems = createFolderItems({\n      filters: () => props.filters,\n      isInFilter,\n      isSelected,\n      onToggle: toggleDialogInFilter,\n      currentFilter: props.currentFilter\n    });\n\n    const searchableFolders = createSearchableFolders({\n      folderItems,\n      search,\n      isSelected,\n      setSelected\n    });\n\n    const {showHint, closeAndDisableTooltip} = useTooltipHint({pivot: () => infoIcon});\n    controls.closeTooltip = closeAndDisableTooltip;\n\n    const onInputKeyDown = useInputKeydown({\n      search,\n      setSearch,\n      selected,\n      setSelected,\n      selectedFilter,\n      currentFilter: props.currentFilter,\n      onToggle: toggleDialogInFilter,\n      visibleFoldersCount: () => searchableFolders().visibleFoldersCount\n    });\n\n    onMount(() => {\n      thumb?.addEventListener(CLICK_EVENT_NAME, e => {\n        e.stopPropagation();\n      }, true);\n    });\n\n    // Prevent calling renderedFolders before initialization\n    createComputed(() => {\n      setSelectableFolders(searchableFolders().folders);\n    });\n\n    createEffect(() => {\n      if(typeof selected() !== 'number') label?.scrollIntoView({block: 'center'});\n    });\n\n    createEffect(() => {\n      props.element.classList.toggle(styles.withScrollable, renderAsScrollable());\n    });\n\n    const cleanupEscapeHandler = appNavigationController.registerEscapeHandler(() => !search());\n\n    onCleanup(() => {\n      props.onCleanup?.();\n      cleanupEscapeHandler();\n    });\n\n    const Items = () => (\n      <For each={searchableFolders().folders}>\n        {(folder) => folder.buttonMenuItem}\n      </For>\n    );\n\n    return (\n      <Show when={renderAsScrollable()} fallback={<Items />}>\n        <div\n          class={styles.ScrollableContainer}\n          classList={{\n            [styles.mobile]: IS_MOBILE\n          }}\n          style={{'--max-visible-items': MAX_VISIBLE_SCROLL_ITEMS}}\n        >\n          <Show when={!IS_MOBILE}>\n            <input\n              class={styles.Input}\n              value={search()}\n              onInput={e => void setSearch(e.target.value)}\n              onBlur={(e) => {\n                e.target.focus();\n              }}\n              onKeyDown={onInputKeyDown}\n              ref={el => void setTimeout(() => void el.focus(), 100)}\n            />\n          </Show>\n          <Show when={!searchableFolders().visibleFoldersCount}>\n            {(() => {\n              const el = i18n('AddToFolderEmptySearchResult');\n              el.classList.add(styles.EmptySearchTip);\n              return el;\n            })()}\n          </Show>\n          <Scrollable class={styles.Scrollable} thumbRef={(el) => void (thumb = el)}>\n            <Show when={!IS_MOBILE}>\n              <div ref={label} class={styles.Label} onPointerEnter={showHint}>\n                {(() => {\n                  const el = i18n('AddToFolderSearch');\n                  el.classList.add(styles.LabelText);\n                  return el;\n                })()}\n                <IconTsx ref={infoIcon} icon='info' />\n              </div>\n            </Show>\n\n            <Items />\n          </Scrollable>\n        </div>\n      </Show>\n    );\n  }\n});\n\nexport {fetchDialogFilters};\nexport default AddToFolderDropdownMenu;\n"],"names":["kindaFuzzyFinder","str","toFind","kindaFuzzyFinderImpl","fm","bestIndicies","bestScore","n","m","j","i","found","newIndicies","fi","s","score","punishments","length","gap","indicies","punishLastMissing","k","result","prevsi","si","log","logger","LogTypes","fetchDialogFilters","rootScope","filter","FOLDER_ID_ARCHIVE","FOLDER_ID_ALL","a","b","p","addToFilter","peerId","excludedPeerId","inputPeer","getPeerId","pinnedPeerId","includedPeerId","removeFromFilter","wrapFolderTitleInSpan","title","middleware","span","fragment","wrapFolderTitle","treeWalker","nodes","charSpansGroups","node","charSpans","char","charSpan","highlightTextNodes","nodeGroups","acc","toCleanup","nodeGroup","localIndicies","li","nodeSingle","styles","nodeStart","nodeEnd","nodeMiddle","onCleanup","el","MIN_FUZZY_SCORE","createButtonMenuIcon","isChecked","docId","emoji","failedToFetchIcon","setFailedToFetchIcon","createSignal","_el$","_tmpl$","_$insert","_$createComponent","Show","when","fallback","IconTsx","icon","getIconForFilter","children","FolderAnimatedIcon","managers","color","size","onFail","dontAnimate","pFlags","title_noanimate","Transition","enterActiveClass","AppearZoomEnterActive","exitActiveClass","enterClass","AppearZoomEnter","exitToClass","AppearZoomExitTo","_el$2","_$effect","_$className","ItemIconCheck","ItemIcon","createButtonMenuLabel","label","isSelected","_el$3","ItemLabelEnter","ItemLabel","createFolderItems","filters","isInFilter","onToggle","currentFilter","createMemo","createMiddleware","debug","destroy","map","extractedTitle","extractEmojiFromFilterTitle","text","get","classList","add","ItemLabelText","options","iconElement","textElement","id","onClick","noop","buttonMenuItem","ButtonMenuItem","element","addEventListener","CLICK_EVENT_NAME","e","shiftKey","stopPropagation","Item","createEffect","selected","remove","textContent","useToggleDialogInFilter","dialog","onNewDialog","hasRequestInProgress","unwrapped","unwrap","newDialog","dialogsStorage","getAnyDialog","isDialog","createSearchableFolders","folderItems","search","setSelected","folders","visibleFoldersCount","sortedFolders","src","finderResult","sort","found1","score1","found2","score2","scrollIntoView","block","forEach","Hidden","useTooltipHint","pivot","closeTooltip","setTimeout","undefined","showHint","showTooltip","vertical","i18n","lighter","auto","useOverlay","onClose","close","closeAndDisableTooltip","useInputKeydown","setSearch","selectedFilter","includes","code","preventDefault","contextMenuController","increment","prev","HAVE_SCROLL_WHEN_ABOVE","AddToFolderDropdownMenu","defineSolidElement","name","component","props","_","controls","Container","infoIcon","thumb","selectableFolders","setSelectableFolders","createSelector","localId","renderAsScrollable","toggleDialogInFilter","searchableFolders","onInputKeyDown","onMount","createComputed","toggle","withScrollable","cleanupEscapeHandler","appNavigationController","registerEscapeHandler","Items","For","each","folder","_tmpl$2","style","setProperty","IS_MOBILE","focus","target","$$input","value","Input","EmptySearchTip","Scrollable","thumbRef","_ref$","_$use","LabelText","ref","r$","_ref$2","Label","_p$","_v$","ScrollableContainer","_v$2","mobile","_$classList","_$delegateEvents"],"mappings":"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"}